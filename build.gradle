apply plugin: 'java'
apply plugin: 'application'

repositories {
    mavenCentral()

    flatDir {
        dirs './libs'
        // https://github.com/DiegoCatalano/Catalano-Framework/releases
        // Download and unpack from libs.zip:
        //  ./libs/Catalano.Core.jar
        //  ./libs/Catalano.Math.jar
        //  ./libs/Catalano.IO.jar
        //  ./libs/Catalano.Image.jar
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava.options.encoding = 'UTF-8'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

test {
    useJUnitPlatform()
}


mainClassName = 'ksn.imgusage.filtersdemo.ImageFilterExamples'
version = '0.1.4'

jar {
    manifest {
        attributes 'Main-Class' : mainClassName,
                   'Title'      : 'Demonstration of the use of image filters - Java SWING desktop application',
                   'Description': 'Examples of usage: \n' +
                                  ' * OpenCV: \n' +
                                  '   https://docs.opencv.org/3.4.2/d4/d86/group__imgproc__filter.html \n' +
                                  ' * Catalano-Framework: \n' +
                                  '   https://github.com/DiegoCatalano/Catalano-Framework',
                   'Version'    : version,
                   'Vendor'     : 'SeregaLBN',
                   'Build-Date' : new Date().format("yyyy-MM-dd'T 'HH:mm:ss.SSSZZ")
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-simple:1.7.26'
    if (false)
        implementation 'org.openpnp:opencv:4.3.0-2'
    else
        implementation 'org.bytedeco:opencv-platform:4.3.0-1.5.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9.3'
    implementation 'org.apache.commons:commons-math3:3.6.1'

  //if (project.file('./libs/Catalano.Core.jar' ).exists())
        implementation name:       'Catalano.Core'
  //if (project.file('./libs/Catalano.Math.jar' ).exists())
        implementation name:       'Catalano.Math'
  //if (project.file('./libs/Catalano.IO.jar'   ).exists())
        implementation name:       'Catalano.IO'
  //if (project.file('./libs/Catalano.Image.jar').exists())
        implementation name:       'Catalano.Image'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testRuntimeOnly    'org.junit.jupiter:junit-jupiter-engine:5.5.1'
}






/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Custom tasks

task cleanAddons(type: Delete) {
    //delete project.file('./libs')
    //delete project.file('./exampleImages')
}

/** /
// can run as single JAR:
//  java -jar ./ImageFilterExamples/build/libs/ImageFilterExamples-fat-{version}.jar
task fatJar(type: Jar) {
    manifest {
        attributes jar.manifest.attributes
    }
    baseName = project.name + '-fat'
    from {
        configurations.compile.collect {
            it.isDirectory()
                ? it
                : zipTree(it).matching{exclude{
                    //println it
                    //it.name == 'META-INF'
                    it.toString().contains('!META-INF')
                }}
        }
    }
    with jar
}
/**/

def ansiColorized(
    text,          // string: you text
    colorText,     // string: any of [null - no change color, 'black', 'red', 'green', 'yellow', 'blue', 'purple', 'cyan', 'white']
    colorBk,       // string: any of [null - no change color, 'black', 'red', 'green', 'yellow', 'blue', 'purple', 'cyan', 'white']
    isBrightText,  // boolean: is high intensity? (set bright foreground color)
    isBrightBk,    // boolean: is high intensity? (set bright background color)
    styles         // string: any of [ null         //  none
                   //               , 'bold'        //  Bold or increased intensity     As with faint, the color change is a PC (SCO / CGA) invention
                   //               , 'dim'         //  Faint or decreased intensity    aka Dim (with a saturated color). May be implemented as a light font weight like bold.
                   //               , 'italic'      //  Italic                          Not widely supported. Sometimes treated as inverse or blink. 
                   //               , 'underline'   //  Underline                       Style extensions exist for Kitty, VTE, mintty and iTerm2
                   //               , 'slowBlink'   //  Slow Blink                      less than 150 per minute
                   //               , 'rapidBLink'  //  Rapid Blink                     MS-DOS ANSI.SYS, 150+ per minute; not widely supported  
                   //               , 'inverse'     //  Reverse                         Swap foreground and background colors, aka invert; inconsistent emulation
                   //               , 'hidden'      //  Conceal                         aka Hide, not widely supported
                   //               , 'crossout' ]  //  Crossed-out                     aka Strikethrough, characters legible but marked as if for deletion.
) {
    // https://en.wikipedia.org/wiki/ANSI_escape_code
    // https://stackoverflow.com/questions/5762491/how-to-print-color-in-console-using-system-out-println

    def codeText
    switch (colorText) {
    case 'black' : codeText = isBrightText ? '90' : '30'; break
    case 'red'   : codeText = isBrightText ? '91' : '31'; break
    case 'green' : codeText = isBrightText ? '92' : '32'; break
    case 'yellow': codeText = isBrightText ? '93' : '33'; break
    case 'blue'  : codeText = isBrightText ? '94' : '34'; break
    case 'purple': codeText = isBrightText ? '95' : '35'; break
    case 'cyan'  : codeText = isBrightText ? '96' : '36'; break
    case 'white' : codeText = isBrightText ? '97' : '37'; break
    case  null   : codeText = ''; break
    default:
        return text // unknown color
    }

    def codeBk
    switch (colorBk) {
    case 'black' : codeBk = isBrightBk ? '100' : '40'; break
    case 'red'   : codeBk = isBrightBk ? '101' : '41'; break
    case 'green' : codeBk = isBrightBk ? '102' : '42'; break
    case 'yellow': codeBk = isBrightBk ? '103' : '43'; break
    case 'blue'  : codeBk = isBrightBk ? '104' : '44'; break
    case 'purple': codeBk = isBrightBk ? '105' : '45'; break
    case 'cyan'  : codeBk = isBrightBk ? '106' : '46'; break
    case 'white' : codeBk = isBrightBk ? '107' : '47'; break
    case  null   :
    default      : codeBk = '' // unknown color
    }

    if ((codeText != '') && (codeBk != ''))
        codeBk = ';' + codeBk;

    def addon = ''
    if (styles != null) {
        if (styles instanceof String)
            styles = [ styles ]

        for (def style : styles)
            switch (style) {
            case 'bold'      : addon += ';1'; break
            case 'dim'       : addon += ';2'; break
            case 'italic'    : addon += ';3'; break
            case 'underline' : addon += ';4'; break
            case 'slowBlink' : addon += ';5'; break
            case 'rapidBLink': addon += ';6'; break
            case 'inverse'   : addon += ';7'; break
            case 'hidden'    : addon += ';8'; break
            case 'crossout'  : addon += ';9'; break
            case  null       : break // none
            }
    }

    def reset = '\u001B[0m'
    return      '\u001B[' + codeText + codeBk + addon + 'm' + text + reset
}

//// test
//for (def clrTxt : [null, 'black', 'red', 'green', 'yellow', 'blue', 'purple', 'cyan', 'white']) {
//for (def clrBk  : [null, 'black', 'red', 'green', 'yellow', 'blue', 'purple', 'cyan', 'white']) {
//    for (def isBrightText : [false, true]) {
//    for (def isBrightBk   : [false, true]) {
//        for (def style : [ null, 'bold', 'dim', 'italic', 'underline', 'slowBlink', 'rapidBLink', 'inverse', 'hidden', 'crossout' ]) {
//            def thisText = 'ansiColorized(thisText, colorText=' + clrTxt + ', colorBk=' + clrBk + ', isBrightText=' + isBrightText + ', isBrightBk=' + isBrightBk + ', style=' + style + ')'
//            println thisText + '\t\t' + ansiColorized(thisText, clrTxt, clrBk, isBrightText, isBrightBk, style, true)
//        }
//    }}
//}}

def downloadByUrl(url, targetFile, recheckSize) {
    try {
        url = new java.net.URL(url)
    } catch (Exception ex) {
        println ansiColorized('Bad url: ' + ex,
                             'red', null, false, null, null)
        return false
    }

    try {
        if (targetFile.exists()) {
            println ansiColorized('File already downloaded! ', null, null, null, null, 'dim') +
                    ansiColorized(targetFile.absolutePath    , null, null, null, null, ['dim', 'italic'])

            if (!recheckSize)
                return true

            println 'Trying to recheck file size...'
            def conn = null
            try {
                conn = url.openConnection()
                conn.setRequestMethod('HEAD')
                long size = conn.contentLengthLong
                if (size < 0) {
                    println '...remoute file size undefined! Trust the local size...'
                    return true // ok
                }
                if (targetFile.length() == size) {
                    println '...file size checked successfully'
                    return true // all ok
                }

                println ansiColorized('...illegal file size: delete it: locatFileSize=' + targetFile.length() + '; remouteFileSize=' + size,
                                      'red', null, false, null, null)
                targetFile.delete()
            } catch (Exception ex) {
                println ansiColorized('Can`t recheck file size: ' + ex,
                                     'red', null, false, null, null)
            } finally {
                if (conn != null)
                    conn.disconnect()
            }
        }

        targetFile.parentFile.mkdirs()

        println ansiColorized('Trying to download a file ', 'yellow', null,  true, null, null) +
                ansiColorized(url                         , 'yellow', null, false, null, ['dim', 'italic'])
        new java.io.BufferedInputStream(url.openStream()).withCloseable { bin ->
        new java.io.FileOutputStream(targetFile).withCloseable { fos ->
            def buffer = new byte[10240]
            long total = 0
            for (int i=0; true; ++i) {
                int read = bin.read(buffer, 0, buffer.length)
                if (read < 0)
                    break
                if (read == 0)
                    continue
                fos.write(buffer, 0, read)
                total += read
                if ((i % 10) == 9)
                    println ansiColorized('  ...iteration #' + (1+i) + ': read=' + read + '; total=' + total,
                                          null, null, null, null, 'dim')
            }
            println ansiColorized('File downloaded! '    , 'cyan', null,  true, null, null) +
                    ansiColorized(targetFile.absolutePath, 'cyan', null, false, null, ['dim', 'italic'])
        }}
        return true
    } catch (Exception ex) {
        println ansiColorized('Can`t download file: ' + ex,
                             'red', null, false, null, null)
        return false
    }
}

// Im not found the Catalano-Framework in the Maven repository ;(
// Trying to auto-download ZIP and unpack JARs
task downloadCatalanoFramework(type: Copy) {
    def lib1 = project.file('./libs/Catalano.Core.jar')
    def lib2 = project.file('./libs/Catalano.Image.jar')
    def lib3 = project.file('./libs/Catalano.IO.jar')
    def lib4 = project.file('./libs/Catalano.Math.jar')
    if (lib1.exists() &&
        lib2.exists() &&
        lib3.exists() &&
        lib4.exists())
    {
        println 'Catalano-Framework exist'
        return;
    }

    def targetZipFile = project.file('./libs/libs.zip')
    def succ = downloadByUrl(
        'https://github.com/DiegoCatalano/Catalano-Framework/releases/download/v1.6.1.1-libs/libs.zip',
        targetZipFile,
        true)
    if (!succ)
        return

    def libZipTree = zipTree(targetZipFile)

    from libZipTree
    include 'Catalano.Core.jar'
    include 'Catalano.Image.jar'
    include 'Catalano.IO.jar'
    include 'Catalano.Math.jar'
    into(project.file('./libs'))

    println '...Catalano jar`s unpacked to directory: ' + project.file('./libs')

    if (!project.file('./libs/Catalano.Core.jar').exists()) {
        // WTF!
        System.err.println('--------------------------------------------')
        System.err.println('--')
        System.err.println('--  Sorrryyyy!  Please call manually:')
        System.err.println('> gradle run')
        System.err.println('--')
        System.err.println('--------------------------------------------')
    }
}

// Download default example image
task downloadExampleImage() {
    doLast {
        // https://commons.wikimedia.org/wiki/File:%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80%D1%81%D1%8C%D0%BA%D0%B0_%D0%B3%D1%96%D1%80%D0%BA%D0%B0,_%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80_%D1%82%D0%B0_%D0%94%D0%BD%D1%96%D0%BF%D1%80%D0%BE.JPG
        downloadByUrl(
            'https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80%D1%81%D1%8C%D0%BA%D0%B0_%D0%B3%D1%96%D1%80%D0%BA%D0%B0%2C_%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80_%D1%82%D0%B0_%D0%94%D0%BD%D1%96%D0%BF%D1%80%D0%BE.JPG/1024px-%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80%D1%81%D1%8C%D0%BA%D0%B0_%D0%B3%D1%96%D1%80%D0%BA%D0%B0%2C_%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80_%D1%82%D0%B0_%D0%94%D0%BD%D1%96%D0%BF%D1%80%D0%BE.JPG',
            project.file('./exampleImages/VolodHill.jpg'),
            false)

        // https://commons.wikimedia.org/wiki/File:Alphabet_board.jpg
        downloadByUrl(
            'https://upload.wikimedia.org/wikipedia/commons/7/70/Alphabet_board.jpg',
            project.file('./exampleImages/Alphabet.eng.jpg'),
            false)

        // https://en.m.wikipedia.org/wiki/File:Similar-geometric-shapes.svg
        downloadByUrl(
            'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Similar-geometric-shapes.svg/1024px-Similar-geometric-shapes.svg.png',
            project.file('./exampleImages/Shapes.png'),
            false)

        // https://en.wikipedia.org/wiki/File:Lenna_(test_image).png
        downloadByUrl(
            'https://upload.wikimedia.org/wikipedia/en/7/7d/Lenna_%28test_image%29.png',
            project.file('./exampleImages/Lena.png'),
            false)

        // https://en.wikipedia.org/wiki/Ukrainian_identity_card
        // https://commons.wikimedia.org/wiki/File:Passport_of_the_Citizen_of_Ukraine_(Since_2016).jpg
        downloadByUrl(
            'https://upload.wikimedia.org/wikipedia/commons/0/0f/Passport_of_the_Citizen_of_Ukraine_%28Since_2016%29.jpg',
            project.file('./exampleImages/passportUkr.jpg'),
            false)

        // free stock photos
        // https://www.pexels.com
        System.setProperty('http.agent', 'Mozilla...'); // lifehack. Otherwise: java.io.IOException: Server returned HTTP response code: 503

        // Саша Лазарев: Children Taking Groupie
        // https://www.pexels.com/photo/children-taking-groupie-3556662/
        downloadByUrl(
            'https://images.pexels.com/photos/3556662/pexels-photo-3556662.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',
            project.file('./exampleImages/family_childrenTakingGroupie_750x1260_AlexLazarev.jpg'),
            false)

        // Julia M Cameron: Photo of Woman and Boy Smiling While Watching Through Imac
        // https://www.pexels.com/photo/photo-of-woman-and-boy-leaning-on-wooden-table-4145353/
        downloadByUrl(
            'https://images.pexels.com/photos/4145353/pexels-photo-4145353.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260',
            project.file('./exampleImages/family_womanAndBoySmiling_750x1260_JuliaCameron.jpg'),
            false)

    }
}




defaultTasks 'clean', 'build', 'run'

project.tasks.clean           .dependsOn project.tasks.cleanAddons
//project.tasks.build           .dependsOn project.tasks.fatJar
project.tasks.compileJava     .dependsOn project.tasks.downloadCatalanoFramework
project.tasks.processResources.dependsOn project.tasks.downloadExampleImage

/** /
gradle.taskGraph.beforeTask { Task task ->
    println '>>>>>>   ' + task.project.name + ':' + task.name
}
gradle.taskGraph.afterTask { Task task ->
    println '<<<<<<   ' + task.project.name + ':' + task.name
}
/**/
