apply plugin: 'java'
apply plugin: 'application'

repositories {
    mavenCentral()

    flatDir {
        dirs './libs'
        // https://github.com/DiegoCatalano/Catalano-Framework/releases
        // Download and unpack from libs.zip:
        //  ./libs/Catalano.Core.jar
        //  ./libs/Catalano.Math.jar
        //  ./libs/Catalano.IO.jar
        //  ./libs/Catalano.Image.jar
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava.options.encoding = 'UTF-8'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

test {
    useJUnitPlatform()
}


mainClassName = 'ksn.imgusage.filtersdemo.MainApp'
version = '0.1.4'

jar {
    manifest {
        attributes 'Main-Class' : mainClassName,
                   'Title'      : 'Demonstration of the use of image filters - Java SWING desktop application',
                   'Description': 'Examples of usage: \n' +
                                  ' * OpenCV: \n' +
                                  '   https://docs.opencv.org/3.4.2/d4/d86/group__imgproc__filter.html \n' +
                                  ' * Catalano-Framework: \n' +
                                  '   https://github.com/DiegoCatalano/Catalano-Framework',
                   'Version'    : version,
                   'Vendor'     : 'SeregaLBN',
                   'Build-Date' : new Date().format("yyyy-MM-dd'T 'HH:mm:ss.SSSZZ")
    }
}

dependencies {
    compile 'org.slf4j:slf4j-simple:1.7.26'
    compile 'org.openpnp:opencv:3.4.2-1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.9.3'
    compile 'org.apache.commons:commons-math3:3.6.1'

    if (project.file('./libs/Catalano.Core.jar' ).exists())
        compile name:       'Catalano.Core'
    if (project.file('./libs/Catalano.Math.jar' ).exists())
        compile name:       'Catalano.Math'
    if (project.file('./libs/Catalano.IO.jar'   ).exists())
        compile name:       'Catalano.IO'
    if (project.file('./libs/Catalano.Image.jar').exists())
        compile name:       'Catalano.Image'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testRuntimeOnly    'org.junit.jupiter:junit-jupiter-engine:5.5.1'
}






/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Custom tasks

task cleanAddons(type: Delete) {
    //delete project.file('./libs')
    //delete project.file('./exampleImages')
}


// can run as single JAR:
//  java -jar ./ImageFilterExamples/build/libs/ImageFilterExamples-fat-{version}.jar
task fatJar(type: Jar) {
    manifest {
        attributes jar.manifest.attributes
    }
    baseName = project.name + '-fat'
    from {
        configurations.compile.collect {
            it.isDirectory()
                ? it
                : zipTree(it).matching{exclude{
                    //println it
                    //it.name == 'META-INF'
                    it.toString().contains('!META-INF')
                }}
        }
    }
    with jar
}

def downloadByUrl(url, targetFile, recheckSize) {
    try {
        if (targetFile.exists()) {
            println 'File already downloaded! ' + targetFile.absolutePath

            if (!recheckSize)
                return true

            println 'Trying to recheck file size...'
            def conn = null
            try {
                conn = url.openConnection()
                conn.setRequestMethod('HEAD')
                long size = conn.contentLengthLong
                if (size < 0) {
                    println '...remoute file size undefined! Trust the local size...'
                    return true // ok
                }
                if (targetFile.length() == size) {
                    println '...file size checked successfully'
                    return true // all ok
                }

                System.err.println('...illegal file size: delete it: locatFileSize=' + targetFile.length() + '; remouteFileSize=' + size)
                targetFile.delete()
            } finally {
                if (conn != null)
                    conn.disconnect()
            }
        }

        targetFile.parentFile.mkdirs()

        println 'Trying to download a file ' + url
        new java.io.BufferedInputStream(url.openStream()).withCloseable { bin ->
        new java.io.FileOutputStream(targetFile).withCloseable { fos ->
            def buffer = new byte[10240]
            long total = 0
            for (int i=0; true; ++i) {
                int read = bin.read(buffer, 0, buffer.length)
                if (read < 0)
                    break
                if (read == 0)
                    continue
                fos.write(buffer, 0, read)
                total += read
                if ((i % 10) == 9)
                    println '  ...iteration #' + (1+i) + ': read=' + read + '; total=' + total
            }
            println 'File downloaded! ' + targetFile.absolutePath
        }}
        return true
    } catch (Exception ex) {
        System.err.println('Can`t download file: ' + ex)
        return false
    }
}

// Im not found the Catalano-Framework in the Maven repository ;(
// Trying to auto-download ZIP and unpack JARs
task downloadCatalanoFramework(type: Copy) {
    def lib1 = project.file('./libs/Catalano.Core.jar')
    def lib2 = project.file('./libs/Catalano.Image.jar')
    def lib3 = project.file('./libs/Catalano.IO.jar')
    def lib4 = project.file('./libs/Catalano.Math.jar')
    if (lib1.exists() &&
        lib2.exists() &&
        lib3.exists() &&
        lib4.exists())
    {
        println 'Catalano-Framework exist'
        return;
    }

    def targetZipFile = project.file('./libs/libs.zip')
    def succ = downloadByUrl(
        new java.net.URL('https://github.com/DiegoCatalano/Catalano-Framework/releases/download/v1.6.1.1-libs/libs.zip'),
        targetZipFile,
        true)
    if (!succ)
        return

    def libZipTree = zipTree(targetZipFile)

    from libZipTree
    include 'Catalano.Core.jar'
    include 'Catalano.Image.jar'
    include 'Catalano.IO.jar'
    include 'Catalano.Math.jar'
    into(project.file('./libs'))
}

// Download default example image
task downloadExampleImage() {
    doLast {
        // https://commons.wikimedia.org/wiki/File:%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80%D1%81%D1%8C%D0%BA%D0%B0_%D0%B3%D1%96%D1%80%D0%BA%D0%B0,_%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80_%D1%82%D0%B0_%D0%94%D0%BD%D1%96%D0%BF%D1%80%D0%BE.JPG
        downloadByUrl(
            new java.net.URL('https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80%D1%81%D1%8C%D0%BA%D0%B0_%D0%B3%D1%96%D1%80%D0%BA%D0%B0%2C_%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80_%D1%82%D0%B0_%D0%94%D0%BD%D1%96%D0%BF%D1%80%D0%BE.JPG/1024px-%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80%D1%81%D1%8C%D0%BA%D0%B0_%D0%B3%D1%96%D1%80%D0%BA%D0%B0%2C_%D0%92%D0%BE%D0%BB%D0%BE%D0%B4%D0%B8%D0%BC%D0%B8%D1%80_%D1%82%D0%B0_%D0%94%D0%BD%D1%96%D0%BF%D1%80%D0%BE.JPG'),
            project.file('./exampleImages/VolodHill.jpg'),
            false)

        // https://commons.wikimedia.org/wiki/File:Alphabet_board.jpg
        downloadByUrl(
            new java.net.URL('https://upload.wikimedia.org/wikipedia/commons/7/70/Alphabet_board.jpg'),
            project.file('./exampleImages/Alphabet.eng.jpg'),
            false)

        // https://en.m.wikipedia.org/wiki/File:Similar-geometric-shapes.svg
        downloadByUrl(
            new java.net.URL('https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Similar-geometric-shapes.svg/1024px-Similar-geometric-shapes.svg.png'),
            project.file('./exampleImages/Shapes.png'),
            false)

        // https://en.wikipedia.org/wiki/File:Lenna_(test_image).png
        downloadByUrl(
            new java.net.URL('https://upload.wikimedia.org/wikipedia/en/7/7d/Lenna_%28test_image%29.png'),
            project.file('./exampleImages/Lena.png'),
            false)

        // https://en.wikipedia.org/wiki/Ukrainian_identity_card
        // https://commons.wikimedia.org/wiki/File:Passport_of_the_Citizen_of_Ukraine_(Since_2016).jpg
        def urkPassFile = project.file('./exampleImages/passportUkr.jpg');
        downloadByUrl(
            new java.net.URL('https://upload.wikimedia.org/wikipedia/commons/0/0f/Passport_of_the_Citizen_of_Ukraine_%28Since_2016%29.jpg'),
            urkPassFile,
            false)
    }
}




defaultTasks 'clean', 'build'
project.tasks.clean           .dependsOn project.tasks.cleanAddons
project.tasks.build           .dependsOn project.tasks.fatJar
project.tasks.compileJava     .dependsOn project.tasks.downloadCatalanoFramework
project.tasks.processResources.dependsOn project.tasks.downloadExampleImage
